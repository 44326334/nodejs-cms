{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e987157dcdd266e582fc.hot-update.js","sources":["webpack:///./api/index.js"],"sourcesContent":["// import constructors from './constructors';\r\n\r\n// const URL = 'http://localhost:3000/admin/api'\r\nconst domain = 'http://localhost';\r\nconst port = '3000';\r\nconst route = 'admin/api';\r\nconst queryDocs = require('./constructors')\r\nconst GRAPHQL_URL = 'http://localhost:3000/admin/api'\r\n\r\nconst createCall = async (queryDoc, accessToken) => {\r\n  const payload = JSON.stringify({\r\n    query: queryDoc\r\n  });\r\n  console.log(payload)\r\n  let response; \r\n  try {\r\n    response = await fetch(\r\n      GRAPHQL_URL,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          // Authorization: `token ${accessToken}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: payload,\r\n      }\r\n    );\r\n  } catch(e) {\r\n    return {\r\n      message: e.message,\r\n      ok: false,\r\n      body: {}\r\n    }\r\n  }\r\n  let body\r\n  console.log(response)\r\n  try {\r\n    body = await response.json();\r\n  } catch(e) {\r\n    return {\r\n      message: e.message,\r\n      ok: response.ok,\r\n      body: {}\r\n    }\r\n  }\r\n  if(!response.ok) {\r\n    return {\r\n      status: response.status,\r\n      ok: response.ok,\r\n      body: {}\r\n    }\r\n  }\r\n  return body.data\r\n  ?{\r\n    status: response.status,\r\n    ok: response.ok,\r\n    body: body.data\r\n  }\r\n  :{\r\n    status: response.status,\r\n    ok: false,\r\n    body: {}\r\n  }\r\n}\r\n\r\nexport const queryid = ({query}, accessToken) => {\r\n  return createCall(queryDocs.queryAllUsers({query}, accessToken))\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AAHA;AACA;AApBA;AA0BA;AA1BA;AAAA;AAAA;AACA;AADA;AA4BA;AA5BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AA+BA;AACA;AACA;AAHA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAsCA;AACA;AACA;AAHA;AACA;AAtCA;AAAA;AA6CA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuDA;AAAA;AACA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}