{"ast":null,"code":"const queryDocs = require('./constructors');\n\nconst GRAPHQL_URL = 'http://localhost:3000/admin/api';\n\nconst queryCall = async (queryDoc, accessToken) => {\n  const payload = JSON.stringify({\n    query: queryDoc\n  });\n  let response;\n\n  try {\n    response = await fetch(GRAPHQL_URL, {\n      method: 'POST',\n      headers: {\n        // Authorization: `token ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: payload\n    });\n  } catch (e) {\n    return {\n      status: response.status,\n      message: e.message,\n      ok: false,\n      body: {}\n    };\n  }\n\n  let body;\n\n  try {\n    body = await response.json();\n  } catch (e) {\n    return {\n      status: response.status,\n      message: e.message,\n      ok: response.ok,\n      body: {}\n    };\n  }\n\n  if (!response.ok) {\n    return {\n      status: response.status,\n      message: 0,\n      ok: response.ok,\n      body: {}\n    };\n  }\n\n  return body.data ? {\n    status: response.status,\n    message: 0,\n    ok: response.ok,\n    body: body.data\n  } : {\n    status: response.status,\n    message: 0,\n    ok: false,\n    body: {}\n  };\n};\n\nexport const queryid = ({\n  id\n}, accessToken) => {\n  return queryCall(queryDocs.queryAllUsers({\n    id\n  }, accessToken));\n};","map":{"version":3,"sources":["C:/cmsapp/api/index.js"],"names":["queryDocs","require","GRAPHQL_URL","queryCall","queryDoc","accessToken","payload","JSON","stringify","query","response","fetch","method","headers","body","e","status","message","ok","json","data","queryid","id","queryAllUsers"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,MAAMC,WAAW,GAAG,iCAApB;;AAEA,MAAMC,SAAS,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,KAAiC;AACjD,QAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC7BC,IAAAA,KAAK,EAAEL;AADsB,GAAf,CAAhB;AAGA,MAAIM,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMC,KAAK,CACpBT,WADoB,EAEpB;AACEU,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP;AACA,wBAAgB;AAFT,OAFX;AAMEC,MAAAA,IAAI,EAAER;AANR,KAFoB,CAAtB;AAWD,GAZD,CAYE,OAAMS,CAAN,EAAS;AACT,WAAO;AACLC,MAAAA,MAAM,EAAEN,QAAQ,CAACM,MADZ;AAELC,MAAAA,OAAO,EAAEF,CAAC,CAACE,OAFN;AAGLC,MAAAA,EAAE,EAAE,KAHC;AAILJ,MAAAA,IAAI,EAAE;AAJD,KAAP;AAMD;;AACD,MAAIA,IAAJ;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAG,MAAMJ,QAAQ,CAACS,IAAT,EAAb;AACD,GAFD,CAEE,OAAMJ,CAAN,EAAS;AACT,WAAO;AACLC,MAAAA,MAAM,EAAEN,QAAQ,CAACM,MADZ;AAELC,MAAAA,OAAO,EAAEF,CAAC,CAACE,OAFN;AAGLC,MAAAA,EAAE,EAAER,QAAQ,CAACQ,EAHR;AAILJ,MAAAA,IAAI,EAAE;AAJD,KAAP;AAMD;;AACD,MAAG,CAACJ,QAAQ,CAACQ,EAAb,EAAiB;AACf,WAAO;AACLF,MAAAA,MAAM,EAAEN,QAAQ,CAACM,MADZ;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,EAAE,EAAER,QAAQ,CAACQ,EAHR;AAILJ,MAAAA,IAAI,EAAE;AAJD,KAAP;AAMD;;AACD,SAAOA,IAAI,CAACM,IAAL,GACN;AACCJ,IAAAA,MAAM,EAAEN,QAAQ,CAACM,MADlB;AAECC,IAAAA,OAAO,EAAE,CAFV;AAGCC,IAAAA,EAAE,EAAER,QAAQ,CAACQ,EAHd;AAICJ,IAAAA,IAAI,EAAEA,IAAI,CAACM;AAJZ,GADM,GAON;AACCJ,IAAAA,MAAM,EAAEN,QAAQ,CAACM,MADlB;AAECC,IAAAA,OAAO,EAAE,CAFV;AAGCC,IAAAA,EAAE,EAAE,KAHL;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPD;AAaD,CAzDD;;AA2DA,OAAO,MAAMO,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,EAAOjB,WAAP,KAAuB;AAC5C,SAAOF,SAAS,CAACH,SAAS,CAACuB,aAAV,CAAwB;AAACD,IAAAA;AAAD,GAAxB,EAA8BjB,WAA9B,CAAD,CAAhB;AACD,CAFM","sourcesContent":["const queryDocs = require('./constructors')\r\nconst GRAPHQL_URL = 'http://localhost:3000/admin/api'\r\n\r\nconst queryCall = async (queryDoc, accessToken) => {\r\n  const payload = JSON.stringify({\r\n    query: queryDoc\r\n  });\r\n  let response; \r\n  try {\r\n    response = await fetch(\r\n      GRAPHQL_URL,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          // Authorization: `token ${accessToken}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: payload,\r\n      }\r\n    );\r\n  } catch(e) {\r\n    return {\r\n      status: response.status,\r\n      message: e.message,\r\n      ok: false,\r\n      body: {}\r\n    }\r\n  }\r\n  let body\r\n  try {\r\n    body = await response.json();\r\n  } catch(e) {\r\n    return {\r\n      status: response.status,\r\n      message: e.message,\r\n      ok: response.ok,\r\n      body: {}\r\n    }\r\n  }\r\n  if(!response.ok) {\r\n    return {\r\n      status: response.status,\r\n      message: 0,\r\n      ok: response.ok,\r\n      body: {}\r\n    }\r\n  }\r\n  return body.data\r\n  ?{\r\n    status: response.status,\r\n    message: 0,\r\n    ok: response.ok,\r\n    body: body.data\r\n  }\r\n  :{\r\n    status: response.status,\r\n    message: 0,\r\n    ok: false,\r\n    body: {}\r\n  }\r\n}\r\n\r\nexport const queryid = ({id}, accessToken) => {\r\n  return queryCall(queryDocs.queryAllUsers({id}, accessToken))\r\n}"]},"metadata":{},"sourceType":"module"}