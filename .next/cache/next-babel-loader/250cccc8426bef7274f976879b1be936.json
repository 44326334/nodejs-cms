{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n// import constructors from './constructors';\n// const URL = 'http://localhost:3000/admin/api'\nvar domain = 'http://localhost';\nvar port = '3000';\nvar route = 'admin/api';\n\nvar queryDocs = require('./constructors');\n\nvar GRAPHQL_URL = 'http://localhost:3000/admin/api';\n\nvar createCall = function createCall(queryDoc) {\n  var payload, response, body;\n  return _regeneratorRuntime.async(function createCall$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _JSON$stringify(queryDoc);\n          console.log(payload);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(GRAPHQL_URL, {\n            method: 'POST',\n            // headers: {\n            //   Authorization: `token ${accessToken}`,\n            // },\n            body: payload\n          }));\n\n        case 4:\n          response = _context.sent;\n          console.log(response);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          body = _context.sent;\n          return _context.abrupt(\"return\", {\n            status: response.status,\n            ok: response.ok,\n            body: body.data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport var queryid = function queryid(query) {\n  // console.log(queryDocs.queryAllUsers({id: 'id'}))\n  console.log(queryDocs.queryAllUsers(query)); // createCall(queryDocs.queryAllUsers({query}))\n};","map":{"version":3,"sources":["C:/cmsapp/api/index.js"],"names":["domain","port","route","queryDocs","require","GRAPHQL_URL","createCall","queryDoc","payload","console","log","fetch","method","body","response","json","status","ok","data","queryid","query","queryAllUsers"],"mappings":";;AAAA;AAEA;AACA,IAAMA,MAAM,GAAG,kBAAf;AACA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,KAAK,GAAG,WAAd;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAMC,WAAW,GAAG,iCAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,OADW,GACD,gBAAeD,QAAf,CADC;AAEjBE,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAFiB;AAAA,2CAIAG,KAAK,CACpBN,WADoB,EAEpB;AACEO,YAAAA,MAAM,EAAE,MADV;AAEE;AACA;AACA;AACAC,YAAAA,IAAI,EAAEL;AALR,WAFoB,CAJL;;AAAA;AAIjBM,UAAAA,QAJiB;AAcjBL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAdiB;AAAA,2CAeEA,QAAQ,CAACC,IAAT,EAfF;;AAAA;AAeXF,UAAAA,IAfW;AAAA,2CAgBV;AACLG,YAAAA,MAAM,EAAEF,QAAQ,CAACE,MADZ;AAELC,YAAAA,EAAE,EAAEH,QAAQ,CAACG,EAFR;AAGLJ,YAAAA,IAAI,EAAEA,IAAI,CAACK;AAHN,WAhBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAuBA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAChC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACkB,aAAV,CAAwBD,KAAxB,CAAZ,EAFgC,CAGhC;AACD,CAJM","sourcesContent":["// import constructors from './constructors';\r\n\r\n// const URL = 'http://localhost:3000/admin/api'\r\nconst domain = 'http://localhost';\r\nconst port = '3000';\r\nconst route = 'admin/api';\r\nconst queryDocs = require('./constructors')\r\nconst GRAPHQL_URL = 'http://localhost:3000/admin/api'\r\n\r\nconst createCall = async (queryDoc) => {\r\n  const payload = JSON.stringify(queryDoc);\r\n  console.log(payload)\r\n  let response; \r\n  response = await fetch(\r\n    GRAPHQL_URL,\r\n    {\r\n      method: 'POST',\r\n      // headers: {\r\n      //   Authorization: `token ${accessToken}`,\r\n      // },\r\n      body: payload,\r\n    }\r\n  );\r\n  console.log(response)\r\n  const body = await response.json();\r\n  return {\r\n    status: response.status,\r\n    ok: response.ok,\r\n    body: body.data,\r\n  };\r\n}\r\n\r\nexport const queryid = (query) => {\r\n  // console.log(queryDocs.queryAllUsers({id: 'id'}))\r\n  console.log(queryDocs.queryAllUsers(query))\r\n  // createCall(queryDocs.queryAllUsers({query}))\r\n}"]},"metadata":{},"sourceType":"module"}